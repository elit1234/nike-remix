{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\eli\\Documents\\Javascript\\remixjs\\my-remix-app\\app\\routes\\index.tsx?browser", "../../../app/routes/index.tsx", "../../../app/shared/components/Logo.tsx"],
  "sourcesContent": ["export { default, links } from \"C:\\\\Users\\\\eli\\\\Documents\\\\Javascript\\\\remixjs\\\\my-remix-app\\\\app\\\\routes\\\\index.tsx\";", "import { LinksFunction } from \"@remix-run/node\";\nimport { useEffect, useRef } from \"react\";\nimport Logo from \"~/shared/components/Logo\";\nimport styles from \"~/styles/home.css\";\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: styles,\n    },\n  ];\n};\n\nexport default function Index() {\n  const checkRef = useRef<any>();\n  const imageRef = useRef<any>();\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      const options = {\n        root: null,\n        rootMargin: \"0px\",\n      };\n      const observer = new IntersectionObserver(function (entries, observer) {\n        entries.forEach((entry) => {\n          if (!entry.isIntersecting) {\n            return;\n          } else {\n            entry.target.classList.add(\"active\");\n          }\n        });\n      }, options);\n\n      if (checkRef.current) {\n        observer.observe(checkRef.current);\n      }\n      if (imageRef.current) {\n        observer.observe(imageRef.current);\n      }\n\n      const pEls = document.querySelectorAll(\"p\");\n      pEls.forEach((el) => observer.observe(el));\n      const buttonEls = document.querySelectorAll(\"button\");\n      buttonEls.forEach((el) => observer.observe(el));\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {/* <div className=\"wrapper\">Home</div> */}\n      <div className=\"green\"></div>\n      <div className=\"check\" ref={checkRef}>\n        <Logo />\n      </div>\n      <div className=\"image-wrapper\">\n        <div className=\"image\" ref={imageRef}></div>\n      </div>\n      <p className=\"largeText\">The latest Nike sports products</p>\n      <p className=\"smallText\">\n        Discover new sports clothing, the latest sneakers releases, daily\n        training tips, fashion advise, and athlete inspiration on the Nike app\n      </p>\n      <button className=\"letsStart\">Let's Start</button>\n    </div>\n  );\n}\n//#8FB13A\n", "const Logo = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"3.5rem\"\r\n      height=\"3.5rem\"\r\n      fill=\"#8FB13A\"\r\n    >\r\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n      <path d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n"],
  "mappings": ";;;;;;;;AAAA;;;ACAA;AACA,mBAAkC;;;ACDlC;AAAA,IAAM,OAAO,MAAM;AACjB,SACE,oCAAC,OAAD;AAAA,IACE,OAAM;AAAA,IACN,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,QAAO;AAAA,IACP,MAAK;AAAA,KAEL,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAO,GAAE;AAAA,MACpB,oCAAC,QAAD;AAAA,IAAM,GAAE;AAAA;AAAA;AAKd,IAAO,eAAQ;;;;;;ADVR,IAAM,QAAuB,MAAM;AACxC,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAKG,iBAAiB;AAC9B,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,8BAAU,MAAM;AACd,QAAI,OAAO,WAAW,aAAa;AACjC,YAAM,UAAU;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA;AAEd,YAAM,WAAW,IAAI,qBAAqB,SAAU,SAAS,WAAU;AACrE,gBAAQ,QAAQ,CAAC,UAAU;AACzB,cAAI,CAAC,MAAM,gBAAgB;AACzB;AAAA,iBACK;AACL,kBAAM,OAAO,UAAU,IAAI;AAAA;AAAA;AAAA,SAG9B;AAEH,UAAI,SAAS,SAAS;AACpB,iBAAS,QAAQ,SAAS;AAAA;AAE5B,UAAI,SAAS,SAAS;AACpB,iBAAS,QAAQ,SAAS;AAAA;AAG5B,YAAM,OAAO,SAAS,iBAAiB;AACvC,WAAK,QAAQ,CAAC,OAAO,SAAS,QAAQ;AACtC,YAAM,YAAY,SAAS,iBAAiB;AAC5C,gBAAU,QAAQ,CAAC,OAAO,SAAS,QAAQ;AAAA;AAAA,KAE5C;AAEH,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAEb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAQ,KAAK;AAAA,KAC1B,oCAAC,cAAD,QAEF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAQ,KAAK;AAAA,OAE9B,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAY,oCACzB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAY,6IAIzB,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAAY;AAAA;",
  "names": []
}
